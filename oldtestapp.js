const TelegramBot = require('node-telegram-bot-api')
const botManager = require('./class/botManager')


const token = '5776133707:AAGmOcGr_D4tfIwfssqL8V1b68eXIgfDQuE'

const bot = new TelegramBot(token, { polling: true })



let users={}

this.step=0


bot.onText(/^\/start$/, function (msg) {
    const opts = {
        reply_markup: {
            resize_keyboard: true,
            one_time_keyboard: false,
            keyboard: [
                [
                  {
                    text: 'üîé–ü–æ–¥–æ–±—Ä–∞—Ç—å –∑–∞–π–º',
                  }, {
                    text: '‚≠ê–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è'
                  }
                ],
                [
                  {
                    text: 'üìù–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É'
                  }
                ],
                [
                  {
                    text: '‚Åâ–ü–æ–º–æ—â—å'
                  }
                ]        
              ],
        }
    };

    bot.sendMessage(msg.chat.id, "–¢–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è \n –û—á–µ–Ω—å –±–æ–ª—å—à–æ–π —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è", opts);
});

bot.on('message', (msg) => {
    const chatId = msg.chat.id
    const user_id=msg.from.id

    if (msg.text.includes('–∑–∞–π–º')) {
      
      if(this.step==4){
      bot.sendMessage(chatId, "–í–æ—Ç –∫–∞–∫–∏–µ –∑–∞–π–º—ã —Å–µ–π—á–∞—Å –º–æ–∂–Ω–æ –≤–∞–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å: \n(–±—É–¥—É—Ç –ø–æ–∑–∂–µ)")

      }
      else {
        bot.sendMessage(chatId, "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∑–∞–π–º–æ–≤, —Å–Ω–∞—á–∞–ª–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É")
      }

    }
      

    if (msg.text.includes('–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è')) {
      bot.sendMessage(chatId, "‚≠ê–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è", {
        reply_markup: {
          inline_keyboard: keyboard2}
      });
    }
    if (msg.text.includes('–∞–Ω–∫–µ—Ç—É')) {
      bot.sendMessage(chatId, "üìù–ó–∞–ø—É—Å–∫ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è... \n –†–µ–¥–∞–∫—Ç–æ—Ä –ø—Ä–æ—Ñ–∏–ª—è - –º–æ–¥—É–ª—å, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –º–µ–Ω—è—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –≤—ã–¥–∞—á–∏.\n \n –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å:\n ‚ùó–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç \n ‚ùó–†–µ–≥–∏–æ–Ω –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è \n ‚ùó–ö—Ä–µ–¥–∏—Ç–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é", {
        reply_markup: {
          inline_keyboard: keyboard4}
      });
    }
    if (msg.text.includes('–ü–æ–º–æ—â—å')) {
      bot.sendMessage(chatId, "–ß–µ–º –º—ã –º–æ–∂–µ–º –ø–æ–º–æ—á—å?", {
        reply_markup: {
          inline_keyboard: keyboard3}
      });
    }




  })





// –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
bot.on('callback_query', (query) => {
    const chatId = query.message.chat.id;



// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã 3

if (query.data === 'k31') { 
  bot.sendMessage(chatId, "–û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å 1");
}

if (query.data === 'k32') { 
  bot.sendMessage(chatId, "–û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å 2");
}

if (query.data === 'k33') { 
  bot.sendMessage(chatId, "–û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å 3");
}


// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã 4

if (query.data === 'k41') { 
  bot.sendMessage(chatId, "#–í–û–ü–†–û–° (1/4) \n ‚ùó–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç \n \n -------------------- \n –í–∞–º –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 18 –ª–µ—Ç!");
  this.step=0

  this.step++
  console.log(this.step)


  bot.on('message', (msg) => {
    const chatId = msg.chat.id;
    const user_id=msg.from.id
    
    
    if (this.step==1) {
     
      if (msg.text>17) {
        console.log(this.step)
        bot.sendMessage(chatId, "#–í–û–ü–†–û–° (2/4) \n ‚ùó–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ —Å–≤–æ–µ–≥–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è")
        this.step++
      }
      
    }

    if (this.step==2) {


      if (isNaN(msg.text)) {
        console.log(this.step)
        bot.sendMessage(chatId, "#–í–û–ü–†–û–° (3/4) \n ‚ùó–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–π–º–æ–≤ –∏ –∫—Ä–µ–¥–∏—Ç–æ–≤", {
          reply_markup: {
            inline_keyboard: keyboard5}
        });
      }
 
    }






  });
}
if (query.data === 'k42') { 
  bot.sendMessage(chatId, "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –µ—â—ë —Ä–∞–∑", {
    reply_markup: {
        resize_keyboard: true,
        one_time_keyboard: false,
        keyboard: [
            [
              {
                text: 'üîé–ü–æ–¥–æ–±—Ä–∞—Ç—å –∑–∞–π–º',
              }, {
                text: '‚≠ê–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è'
              }
            ],
            [
              {
                text: 'üìù–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É'
              }
            ],
            [
              {
                text: '‚Åâ–ü–æ–º–æ—â—å'
              }
            ]        
          ],
    }
  });
}


// –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã 5

if (query.data === 'k51') { 
  this.step=3
  console.log(this.step)
  bot.sendMessage(chatId, "#–í–û–ü–†–û–° (4/4) \n ‚ùó–í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—É–º–º—É –∏ —Å—Ä–æ–∫ –∑–∞–π–º–∞")
  
  bot.on('message', (msg) => {
    const chatId = msg.chat.id
    const user_id=msg.from.id
    
    
    if (this.step==3) {
     
      if (msg.text) {
        bot.sendMessage(chatId, "–í—Å–µ –≥–æ—Ç–æ–≤–æ! \n‚úÖ–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–ø–æ–ª–Ω–µ–Ω \n–¢–µ–ø–µ—Ä—å –¥–ª—è –≤–∞—Å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ–¥–±–æ—Ä –∑–∞–π–º–∞")
        this.step++
        console.log(this.step)
      }
      
    }


  })
}

if (query.data === 'k52') { 
  this.step=3
  console.log(this.step)
  bot.sendMessage(chatId, "#–í–û–ü–†–û–° (4/4) \n ‚ùó–í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—É–º–º—É –∏ —Å—Ä–æ–∫ –∑–∞–π–º–∞")
  
  bot.on('message', (msg) => {
    const chatId = msg.chat.id
    const user_id=msg.from.id
    
    
    if (this.step==3) {
     
      if (msg.text) {
        bot.sendMessage(chatId, "–í—Å–µ –≥–æ—Ç–æ–≤–æ! \n‚úÖ–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–ø–æ–ª–Ω–µ–Ω \n–¢–µ–ø–µ—Ä—å –¥–ª—è –≤–∞—Å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ–¥–±–æ—Ä –∑–∞–π–º–∞")
        this.step++
        console.log(this.step)
      }
      
    }


  })
}

if (query.data === 'k53') { 
  this.step=3
  console.log(this.step)
  bot.sendMessage(chatId, "#–í–û–ü–†–û–° (4/4) \n ‚ùó–í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—É–º–º—É –∏ —Å—Ä–æ–∫ –∑–∞–π–º–∞")
  
  bot.on('message', (msg) => {
    const chatId = msg.chat.id
    const user_id=msg.from.id
    
    
    if (this.step==3) {
     
      if (msg.text) {
        bot.sendMessage(chatId, "–í—Å–µ –≥–æ—Ç–æ–≤–æ! \n‚úÖ–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–ø–æ–ª–Ω–µ–Ω \n–¢–µ–ø–µ—Ä—å –¥–ª—è –≤–∞—Å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ–¥–±–æ—Ä –∑–∞–π–º–∞")
        this.step++
        console.log(this.step)
      }
      
    }


  })
}

if (query.data === 'k54') { 
  this.step=3
  console.log(this.step)
  bot.sendMessage(chatId, "#–í–û–ü–†–û–° (4/4) \n ‚ùó–í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—É–º–º—É –∏ —Å—Ä–æ–∫ –∑–∞–π–º–∞")
  
  bot.on('message', (msg) => {
    const chatId = msg.chat.id
    const user_id=msg.from.id
    
    
    if (this.step==3) {
     
      if (msg.text) {
        bot.sendMessage(chatId, "–í—Å–µ –≥–æ—Ç–æ–≤–æ! \n‚úÖ–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–ø–æ–ª–Ω–µ–Ω \n–¢–µ–ø–µ—Ä—å –¥–ª—è –≤–∞—Å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ–¥–±–æ—Ä –∑–∞–π–º–∞")
        this.step++
        console.log(this.step)
      }
      
    }


  })
}


  });






  
  //–∫–æ–Ω—Ñ–∏–≥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
const keyboard2 = [
  [
    {
      text: '–ü–æ–¥ 0%', // —Ç–µ–∫—Å—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ
      callback_data: 'k21' // –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏–π
    }
  ],
  [
      {
        text: '–° –ø–ª–æ—Ö–æ–π –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π',
        callback_data: 'k22'
      }
  ],
  [
    {
      text: '–ù–∞ QIWI',
      callback_data: 'k23'
    }
],
  [
    {
      text: '–ù–∞ Yandex.–î–µ–Ω—å–≥–∏',
      callback_data: 'k24'
    }
],
[
  {
    text: '–ù–∞–ª–∏—á–Ω—ã–º–∏ —á–µ—Ä–µ–∑ –ö–æ–Ω—Ç–∞–∫—Ç',
    callback_data: 'k25'
  }
],
[
  {
    text: '–í—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã',
    callback_data: 'k26'
  }
],
];

 //–∫–æ–Ω—Ñ–∏–≥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
 const keyboard3 = [
  [
    {
      text: '–ö–∞–∫ –ø–æ–¥–æ–±—Ä–∞—Ç—å –≤—ã–≥–æ–¥–Ω—ã–π –∑–∞–π–º?', // —Ç–µ–∫—Å—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ
      callback_data: 'k31' // –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏–π
    }
  ],
  [
      {
        text: '–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –∑–∞–π–º –≤ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö?',
        callback_data: 'k32'
      }
  ],
  [
    {
      text: '–ö–∞–∫ —Å–º–µ–Ω–∏—Ç—å —Å—Ç—Ä–∞–Ω—É –∏–ª–∏ –≤–æ–∑—Ä–∞—Å—Ç?',
      callback_data: 'k33'
    }
]
 ];

  //–∫–æ–Ω—Ñ–∏–≥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
  const keyboard4 = [
    [
      {
        text: '‚úÖ–ó–∞–ø—É—Å—Ç–∏—Ç—å', // —Ç–µ–∫—Å—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ
        callback_data: 'k41' // –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏–π
      }
    ],
    [
        {
          text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ',
          callback_data: 'k42'
        }
    ],
   ];

     //–∫–æ–Ω—Ñ–∏–≥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
  const keyboard5 = [
    [
      {
        text: '0', 
        callback_data: 'k51' 
      }
    ],
    [
        {
          text: '1-5',
          callback_data: 'k52'
        }
    ],
    [
      {
        text: '6-10',
        callback_data: 'k53'
      }
  ],
  [
    {
      text: '10 –∏ –±–æ–ª–µ–µ',
      callback_data: 'k54'
    }
],
   ];